const shortid = require("shortid"); // guarda o modulo shortId, que faz essa geração randômica de Id's
const URL = require("../models/url"); // permite o ascesso ao modelo URL que atua na database

async function handleGenerateNewShortURL(req, res) {
  const body = req.body; // extrai o conteudo da request
  if (!body.url) return res.status(400).json({ error: "url is required" }); // checa se tem algum conteudo url no body, senao printa um erro
  const shortID = shortid(); // gera um shortId

  await URL.create({ // define as propiedares com base no urlSchema
    shortId: shortID, // insere o shortID gerado
    redirectURL: body.url, // insere a url original
    visitHistory: [], // array vazio
  });

  return res.json({ id: shortID }); // retorna ao cliente o shortid gerado
}

async function handleGetAnalytics(req, res) { // pega a propriedade visitHistory do shortId passado pra ela e checa o tamanho do array, dando assim o número de visitas
  const shortId = req.params.shortId;
  const result = await URL.findOne({ shortId });
  return res.json({
    totalClicks: result.visitHistory.length,
    analytics: result.visitHistory, // alem da quantidade de visitas, printa tbm o proprio array de visitas
  });
}

module.exports = {
  handleGenerateNewShortURL,
  handleGetAnalytics,
};
